// MDL v1 utf8

// Copyright (c) 2015, Forschungszentrum Jülich GmbH
// All rights reserved.
// Contributors: Jonas Bühler, Daniel Pflugfelder, Siegfried Jahnke
// Address: Institute of Bio- and Geosciences, Plant Sciences (IBG-2), Forschungszentrum Jülich GmbH, 52428 Jülich, Germany
// 
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//  1. Redistributions of source code must retain the above copyright notice, this
//     list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice,
//     this list of conditions and the following disclaimer in the documentation
//     and/or other materials provided with the distribution.
//  3. Neither the name of the copyright holder nor the names of its contributors
//     may be used to endorse or promote products derived from this software without
//     specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
// OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.



network  {
  watchlist = ""
}
module SoView2DOverlay {
  internal  {
    frame = "3494 -475 136 56"
    moduleGroupName = BackgroundMask
    windows  {
      window _default {
        geometry = "1005 459 436 386"
        sizeHint = "436 386"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoView2DOverlay
    drawingOn = TRUE
    editingOn = TRUE
    maskValid = TRUE
    fixZOn = TRUE
    color = "1 1 1"
    selectionTolerance = 4
    needsValidVoxel = TRUE
    button1 = IGNORED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    control = IGNORED
    alt = IGNORED
    wantsAllEvents = TRUE
    wantsKeyEvents = TRUE
    wantsMouseWheelEvents = FALSE
    setEventHandled = FALSE
    ignoreHandledEvents = FALSE
    createNewMode = FALSE
    renderOnSlab = TRUE
    clipToSlice = TRUE
    cursorShape = UNDEFINED_CURSOR
    cacheTextures = TRUE
    blendMode = BLEND_BLEND
    overwriteCurrentTimePoint = FALSE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_LINEAR
    inheritFilterMode = TRUE
    lutPrecision = VIEW2D_LUT_AUTO
    alphaFactor = 0.30000001
    baseColor = "1 0 0.0156862754374743"
    useWorldCoords = FALSE
    applyLut = TRUE
    isCheckerTiling = FALSE
    checkerTileSize = 2
    areCheckerTilesInverted = FALSE
  }
}
module SoBypass {
  internal  {
    frame = "3514 -579 96 56"
    moduleGroupName = BackgroundMask
    windows  {
      window _default {
        geometry = "591 581 239 94"
        sizeHint = "239 94"
        wasOpen = no
      }
      window _automatic {
        geometry = "717 329 500 600"
        sizeHint = "260 223"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoBypass
    bypass = TRUE
    noBypass = FALSE
  }
}
module Arithmetic1 {
  internal  {
    frame = "3510 -351 104 64"
    moduleGroupName = BackgroundMask
    windows  {
      window _default {
        geometry = "848 597 240 64"
        sizeHint = "238 64"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = invertedMask
    function = Invert
    constant = 0
  }
}
connections  {
  SoView2DOverlay.image = invertedMask.output0
  SoBypass.child = SoView2DOverlay.self
}
networkModel = ""
