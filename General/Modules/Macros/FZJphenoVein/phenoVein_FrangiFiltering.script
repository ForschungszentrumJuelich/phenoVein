// Copyright (c) 2015, Forschungszentrum Jülich GmbH
// All rights reserved.
// Contributors: Jonas Bühler, Daniel Pflugfelder, Siegfried Jahnke
// Address: Institute of Bio- and Geosciences, Plant Sciences (IBG-2), Forschungszentrum Jülich GmbH, 52428 Jülich, Germany
// 
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//  1. Redistributions of source code must retain the above copyright notice, this
//     list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice,
//     this list of conditions and the following disclaimer in the documentation
//     and/or other materials provided with the distribution.
//  3. Neither the name of the copyright holder nor the names of its contributors
//     may be used to endorse or promote products derived from this software without
//     specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
// OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.


Interface  {
  Inputs  {
    Field input0 {
      internalName = MinMaxScan0.input0
      comment = "b&w original image"
    }
    Field input1 {
      internalName = MinMaxScan1.input0
      comment = "Leaf mask"
    }
  }
  Outputs  {
    Field output0 {
//      internalName = MinMaxScan2.output0
      internalName = Scale.output0
    }
  }
  Parameters {
    Field startSigma              {internalName = Vesselness.startSigma}
    Field endSigma                {internalName = Vesselness.endSigma}
    Field nbrOfScales             {internalName = Vesselness.nbrOfScales}
    Field closingKernelSize       {internalName = Morphology.kernelX}
    Field boundaryErosion         {internalName = FastMorphology.xSize}

    Field inputUpToDate           {type = Bool}
    Field frangiUpdate            {internalName = Vesselness.update}
    Field frangiAutoUpdate        {internalName = Vesselness.autoUpdate}
    Field updateInputs            {type = Trigger}
    Field resetLUTs               {type = Trigger}
  }
}

Commands {
  source = $(LOCAL)/phenoVein_FrangiFiltering.py
  
  FieldListener updateInputs {command = updateInputs}
  FieldListener resetLUTs    {command = resetLUTs}
  
  FieldListener  {
    listenField = MinMaxScan0.input0
    listenField = MinMaxScan1.input0
    listenField = MinMaxScan0.upToDate
    listenField = MinMaxScan1.upToDate    
    command = setInputUpToDate
  }
  
  //FieldListener Info.dataType {
  //  command = "*py: ctx.field("View2D2.resetLUT").touch()*"
  //}

}