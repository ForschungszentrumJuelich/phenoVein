// MDL v1 utf8

// Copyright (c) 2015, Forschungszentrum Jülich GmbH
// All rights reserved.
// Contributors: Jonas Bühler, Daniel Pflugfelder, Siegfried Jahnke
// Address: Institute of Bio- and Geosciences, Plant Sciences (IBG-2), Forschungszentrum Jülich GmbH, 52428 Jülich, Germany
// 
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//  1. Redistributions of source code must retain the above copyright notice, this
//     list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice,
//     this list of conditions and the following disclaimer in the documentation
//     and/or other materials provided with the distribution.
//  3. Neither the name of the copyright holder nor the names of its contributors
//     may be used to endorse or promote products derived from this software without
//     specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
// OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.



network  {
  watchlist = ""
}
module IntervalThreshold {
  internal  {
    frame = "4182 -2122 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "766 439 403 380"
        sizeHint = "403 380"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = IntervalThreshold
    lowerType = UserDef
    innerType = UserDef
    upperType = UserDef
    centerWidthSet = FALSE
    threshCenter = 0
    threshWidth = 0
    threshMin = 0
    threshMax = 0
    lowerUserValue = 0
    innerUserValue = 0
    upperUserValue = 1
    changeMinMax = TRUE
    changedMin = 0
    changedMax = 1
  }
}
module DtfSkeletonization {
  internal  {
    frame = "4182 -1986 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "-777 575 327 321"
        sizeHint = "327 321"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = DtfSkeletonization
    updateSkeletonGraph = FALSE
    compileGraphVoxels = FALSE
    objectMinValue = 1
    cavityVolume = 150
    maxDistance = 1
    useMaxDistance = FALSE
    autoUpdateMode = AutoUpdate
    skeletonOnly = TRUE
  }
}
module ImagePropertyConvert {
  internal  {
    frame = "4166 -2258 160 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1347 340 324 631"
        sizeHint = "324 631"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ImagePropertyConvert1
    changeDimensionInfo = FALSE
    cDimInfo = ""
    tDimInfo = ""
    uDimInfo = ""
    a00 = 1
    a01 = 0
    a02 = 0
    a03 = 0
    a10 = 0
    a11 = 1
    a12 = 0
    a13 = 0
    a20 = 0
    a21 = 0
    a22 = 1
    a23 = 0
    a30 = 0
    a31 = 0
    a32 = 0
    a33 = 1
    worldMatrix = "1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1"
    changeDatatype = TRUE
    datatype = "unsigned int8"
    changePageSize = FALSE
    pageSizeX = 3012
    pageSizeY = 1714
    pageSizeZ = 1
    pageSizeC = 1
    pageSizeT = 1
    pageSizeU = 1
    changeMinGreyvalue = TRUE
    minGreyvalue = 0
    changeMaxGreyvalue = TRUE
    maxGreyvalue = 1
    changeWorldMatrix = FALSE
    voxelSizeX = 1
    voxelSizeY = 1
    voxelSizeZ = 1
    autoApply = TRUE
  }
}
connections  {
  IntervalThreshold.input0 = DtfSkeletonization.output0
  ImagePropertyConvert1.input0 = IntervalThreshold.output0
}
networkModel = ""
